# Generated by Django 4.2.6 on 2023-10-28 19:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business_Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name_business', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('business_type', models.CharField(max_length=100)),
                ('social_media', models.CharField(default='Instagram', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CollaboratorAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this collaborator belongs to. A collaborator will get all permissions granted to each of their groups.', related_name='collaborator_accounts', to='auth.group', verbose_name='groups')),
                ('id_business_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.business_data')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this collaborator.', related_name='collaborator_accounts', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('id_collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.collaboratoraccounts')),
            ],
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('notes', models.TextField()),
                ('id_business_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.business_data')),
            ],
        ),
        migrations.CreateModel(
            name='calendar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.collaboratoraccounts')),
            ],
        ),
        migrations.AddField(
            model_name='business_data',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('startTime', models.CharField(max_length=50)),
                ('endTime', models.CharField(max_length=50)),
                ('id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.clients')),
                ('id_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IrisApp.services')),
            ],
        ),
    ]
